import{d as p,u as h,k,c as i,l as a,t as e,a as r,e as n,a3 as d,o as l}from"./chunks/framework.7ep0oyv4.js";const g=d(`<h1 id="flex-弹性布局" tabindex="-1">flex 弹性布局 <a class="header-anchor" href="#flex-弹性布局" aria-label="Permalink to &quot;flex 弹性布局&quot;">​</a></h1><h2 id="属性概览" tabindex="-1">属性概览 <a class="header-anchor" href="#属性概览" aria-label="Permalink to &quot;属性概览&quot;">​</a></h2><h3 id="flex容器的属性" tabindex="-1">flex容器的属性 <a class="header-anchor" href="#flex容器的属性" aria-label="Permalink to &quot;flex容器的属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.flex-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*主轴的方向*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">column-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*换行*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nowrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*flex-direction flex-wrap 简写*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;flex-direction&gt; &lt;flex-wrap&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*子元素在主轴上的对齐方式*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*子元素在交叉轴上的对齐方式*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*多根轴线的对齐方式*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="flex容器子元素的属性" tabindex="-1">flex容器子元素的属性 <a class="header-anchor" href="#flex容器子元素的属性" aria-label="Permalink to &quot;flex容器子元素的属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .flex-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*子元素的排列顺序*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;integer&gt;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*子元素的放大比例*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-grow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;number&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default 0 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*子元素的缩小比例*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-shrink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;number&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default 1 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-basis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;length&gt; | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default auto */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*flex-grow flex-shrink 简写*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | [ &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-grow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-shrink&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;? || &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-basis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; ];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*单个子元素与其他子元素不一样的对齐方式*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="flex-direction-flex容器" tabindex="-1">flex-direction(flex容器) <a class="header-anchor" href="#flex-direction-flex容器" aria-label="Permalink to &quot;flex-direction(flex容器)&quot;">​</a></h2><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">column-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p>row（默认值）：主轴为水平方向，起点在左端。</p><p><img src="https://xnote.xclhove.top/api/image/name/f9d2d063-9f9e-430e-8446-fffb1a3cfda0.png" alt="f9d2d063-9f9e-430e-8446-fffb1a3cfda0.png"></p></li><li><p>row-reverse：主轴为水平方向，起点在右端。</p><p><img src="https://xnote.xclhove.top/api/image/name/b2125700-b67d-4734-8bf6-d53ad43d9738.png" alt="b2125700-b67d-4734-8bf6-d53ad43d9738.png"></p></li><li><p>column：主轴为垂直方向，起点在上沿。</p><p><img src="https://xnote.xclhove.top/api/image/name/21be9c80-b73e-4996-bfa0-d282a0e671e3.png" alt="21be9c80-b73e-4996-bfa0-d282a0e671e3.png"></p></li><li><p>column-reverse：主轴为垂直方向，起点在下沿。</p><p><img src="https://xnote.xclhove.top/api/image/name/ccb73f3b-b0c0-4327-97bb-4631cf1cf847.png" alt="ccb73f3b-b0c0-4327-97bb-4631cf1cf847.png"></p></li></ul><h2 id="flex-wrap-flex容器" tabindex="-1">flex-wrap(flex容器) <a class="header-anchor" href="#flex-wrap-flex容器" aria-label="Permalink to &quot;flex-wrap(flex容器)&quot;">​</a></h2><p><code>flex-wrap</code>属性定义当一条轴线排不下时如何换行</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nowrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p>nowrap（默认）：不换行。</p><p><img src="https://xnote.xclhove.top/api/image/name/a8590ac1-fa2d-4a8b-9beb-b9976ffd79f1.png" alt="a8590ac1-fa2d-4a8b-9beb-b9976ffd79f1.png"></p></li><li><p>wrap：换行，第一行在上方。</p><p><img src="https://xnote.xclhove.top/api/image/name/c957f410-6efc-4b83-96c2-833ae754c401.png" alt="c957f410-6efc-4b83-96c2-833ae754c401.png"></p></li><li><p>wrap-reverse：换行，第一行在下方。</p><p><img src="https://xnote.xclhove.top/api/image/name/0dbe5963-9f7b-48e4-b5be-7590d8483427.png" alt="0dbe5963-9f7b-48e4-b5be-7590d8483427.png"></p></li></ul><h2 id="flex-flow-flex容器" tabindex="-1">flex-flow(flex容器) <a class="header-anchor" href="#flex-flow-flex容器" aria-label="Permalink to &quot;flex-flow(flex容器)&quot;">​</a></h2><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;flex-direction&gt; &lt;flex-wrap&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="justify-content-flex容器" tabindex="-1">justify-content(flex容器) <a class="header-anchor" href="#justify-content-flex容器" aria-label="Permalink to &quot;justify-content(flex容器)&quot;">​</a></h2><p>justify-content属性定义了项目在主轴上的对齐方式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p>flex-start（默认值）：左对齐</p><p><img src="https://xnote.xclhove.top/api/image/name/37b97d63-e7d6-4949-99b6-847f48b1d185.png" alt="37b97d63-e7d6-4949-99b6-847f48b1d185.png"></p></li><li><p>flex-end：右对齐</p><p><img src="https://xnote.xclhove.top/api/image/name/d006a993-23f4-405d-8a0a-699f76c2fd3a.png" alt="d006a993-23f4-405d-8a0a-699f76c2fd3a.png"></p></li><li><p>center： 居中</p><p><img src="https://xnote.xclhove.top/api/image/name/646c3b36-5d34-433a-9a7a-b40a4efef4c5.png" alt="646c3b36-5d34-433a-9a7a-b40a4efef4c5.png"></p></li><li><p>space-between：两端对齐，项目之间的间隔都相等。</p><p><img src="https://xnote.xclhove.top/api/image/name/b78f07f9-e565-45a1-a4e2-44c0ca5154e2.png" alt="b78f07f9-e565-45a1-a4e2-44c0ca5154e2.png"></p></li><li><p>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</p><p><img src="https://xnote.xclhove.top/api/image/name/8abb1474-3119-454d-bb60-49ce1e4b29ca.png" alt="8abb1474-3119-454d-bb60-49ce1e4b29ca.png"></p></li></ul><h2 id="align-items-flex容器" tabindex="-1">align-items(flex容器) <a class="header-anchor" href="#align-items-flex容器" aria-label="Permalink to &quot;align-items(flex容器)&quot;">​</a></h2><p>align-items属性定义项目在交叉轴上如何对齐</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p>flex-start：交叉轴的起点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/dacf9d03-c253-4e6e-b4c2-421609f8ded9.png" alt="dacf9d03-c253-4e6e-b4c2-421609f8ded9.png"></p></li><li><p>flex-end：交叉轴的终点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/9401fcc5-8735-49b0-a425-e22b042f1274.png" alt="9401fcc5-8735-49b0-a425-e22b042f1274.png"></p></li><li><p>center：交叉轴的中点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/d46624a2-d612-4d11-8e14-74ab696d41a9.png" alt="d46624a2-d612-4d11-8e14-74ab696d41a9.png"></p></li><li><p>baseline: 项目的第一行文字的基线对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/86cebf20-ea81-4d5d-ae4d-9ed8b903331a.png" alt="86cebf20-ea81-4d5d-ae4d-9ed8b903331a.png"></p></li><li><p>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</p><p><img src="https://xnote.xclhove.top/api/image/name/e01f9487-4d74-49e9-ad28-a830f8c7957c.png" alt="e01f9487-4d74-49e9-ad28-a830f8c7957c.png"></p></li></ul><h2 id="align-content-flex容器" tabindex="-1">align-content(flex容器) <a class="header-anchor" href="#align-content-flex容器" aria-label="Permalink to &quot;align-content(flex容器)&quot;">​</a></h2><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p>flex-start：与交叉轴的起点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/ce7b36a8-7214-4f89-b823-f5dc0be18c51.png" alt="ce7b36a8-7214-4f89-b823-f5dc0be18c51.png"></p></li><li><p>flex-end：与交叉轴的终点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/5f6b512e-3da0-402c-9344-b29763cacd65.png" alt="5f6b512e-3da0-402c-9344-b29763cacd65.png"></p></li><li><p>center：与交叉轴的中点对齐。</p><p><img src="https://xnote.xclhove.top/api/image/name/e62e6e0f-9d71-47f8-a6e8-3f855e559048.png" alt="e62e6e0f-9d71-47f8-a6e8-3f855e559048.png"></p></li><li><p>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</p><p><img src="https://xnote.xclhove.top/api/image/name/dcf78e9a-fbd8-40e0-8291-906ad11f8da8.png" alt="dcf78e9a-fbd8-40e0-8291-906ad11f8da8.png"></p></li><li><p>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</p><p><img src="https://xnote.xclhove.top/api/image/name/c01da725-1f5b-4550-8396-fc36507a2721.png" alt="c01da725-1f5b-4550-8396-fc36507a2721.png"></p></li><li><p>stretch（默认值）：轴线占满整个交叉轴。</p></li></ul><h2 id="order-flex容器的子元素" tabindex="-1">order(flex容器的子元素) <a class="header-anchor" href="#order-flex容器的子元素" aria-label="Permalink to &quot;order(flex容器的子元素)&quot;">​</a></h2><p>order属性定义子元素的排列顺序。数值越小，排列越靠前，默认为0。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;number&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/545b01f0-fde8-483b-9b02-c1674fe1409e.png" alt="545b01f0-fde8-483b-9b02-c1674fe1409e.png"></p><h2 id="flex-grow-flex容器的子元素" tabindex="-1">flex-grow(flex容器的子元素) <a class="header-anchor" href="#flex-grow-flex容器的子元素" aria-label="Permalink to &quot;flex-grow(flex容器的子元素)&quot;">​</a></h2><p>flex-grow属性定义子元素的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。</p><p>如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-grow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;number&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default 0 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/0370f429-8a0e-42b2-8c1e-f1675a93d36d.png" alt="0370f429-8a0e-42b2-8c1e-f1675a93d36d.png"></p><h2 id="flex-shrink-flex容器的子元素" tabindex="-1">flex-shrink(flex容器的子元素) <a class="header-anchor" href="#flex-shrink-flex容器的子元素" aria-label="Permalink to &quot;flex-shrink(flex容器的子元素)&quot;">​</a></h2><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><p>负值对该属性无效。</p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。</p><p>如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-shrink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;number&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default 1 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/f98623bc-3f47-4f43-bd33-ecc27a039cbb.png" alt="f98623bc-3f47-4f43-bd33-ecc27a039cbb.png"></p><h2 id="flex-basis-flex容器的子元素" tabindex="-1">flex-basis(flex容器的子元素) <a class="header-anchor" href="#flex-basis-flex容器的子元素" aria-label="Permalink to &quot;flex-basis(flex容器的子元素)&quot;">​</a></h2><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间。</p><p>浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-basis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;length&gt; | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* default auto */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="flex-flex容器的子元素" tabindex="-1">flex(flex容器的子元素) <a class="header-anchor" href="#flex-flex容器的子元素" aria-label="Permalink to &quot;flex(flex容器的子元素)&quot;">​</a></h2><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，后两个属性可选。</p><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | [ &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-grow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-shrink&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;? || &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex-basis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="align-self" tabindex="-1">align-self <a class="header-anchor" href="#align-self" aria-label="Permalink to &quot;align-self&quot;">​</a></h2><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。</p><p>默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/220a88e7-8577-4374-b924-8a92b1a8ecec.png" alt="220a88e7-8577-4374-b924-8a92b1a8ecec.png"></p>`,62),E=["href"],c=["href"],o={key:1,style:{margin:"0 5px"}},f=["href"],F=JSON.parse('{"title":"flex 弹性布局","description":"","frontmatter":{"prev":{"text":"笔记","link":"/笔记"}},"headers":[],"params":{"id":111,"title":"flex 弹性布局","userId":1,"releaseTime":"2024-06-26T22:59:04.000+00:00","updateTime":"10/11/2024, 5:05:09 AM","isPublic":"公开","typeId":3,"sourceUrl":"https://xnote.xclhove.top/note/preview/111","prev":{"link":"./91#Vue: Cannot find module @/router/router.ts or its corresponding type declarations.","text":"上一篇：Vue: Cannot find module @/router/router.ts or its corresponding type declarations."},"next":{"link":"./127#Dockerfile语法","text":"下一篇：Dockerfile语法"}},"relativePath":"note/111.md","filePath":"note/111.md"}'),y={name:"note/111.md"},u=p({...y,setup(x){const{params:t}=h();return k(()=>{document.title=t.value.title}),(s,b)=>(l(),i("div",null,[g,a("p",null,"最近更新："+e(s.$params.updateTime),1),a("p",null,[r("原文链接："),a("a",{target:"_blank",href:s.$params.sourceUrl},e(s.$params.title),9,E)]),a("span",null,[s.$params.prev?(l(),i("a",{key:0,class:"prev",href:s.$params.prev.link},e(s.$params.prev.text),9,c)):n("",!0),s.$params.prev&&s.$params.next?(l(),i("span",o,"|")):n("",!0),s.$params.next?(l(),i("a",{key:2,href:s.$params.next.link},e(s.$params.next.text),9,f)):n("",!0)])]))}});export{F as __pageData,u as default};
