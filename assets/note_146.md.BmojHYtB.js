import{d as i,u as t,k as c,c as a,l as n,t as e,a as d,e as o,a3 as r,o as p}from"./chunks/framework.7ep0oyv4.js";const h=r(`<h1 id="centos-7-8-离线安装-docker-docker-compose" tabindex="-1">Centos 7/8 离线安装 docker/docker-compose <a class="header-anchor" href="#centos-7-8-离线安装-docker-docker-compose" aria-label="Permalink to &quot;Centos 7/8 离线安装 docker/docker-compose&quot;">​</a></h1><h2 id="离线安装-docker" tabindex="-1">离线安装 docker <a class="header-anchor" href="#离线安装-docker" aria-label="Permalink to &quot;离线安装 docker&quot;">​</a></h2><ol><li>下载 docker，这里以 <strong>docker-27.4.1. tgz</strong> 为例</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://download.docker.com/linux/static/stable/x86_64/</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/1_c17e5028a1a3f7fd847d8a8bc74c7c0c.png" alt="image.png"></p><ol><li>将压缩包上传到 centos 8 <strong>/root</strong>目录</li><li>打开命令行，进入 /root 目录</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd /root</span></span></code></pre></div><ol><li>解压docker-27.4.1. tgz压缩包</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tar -zxf docker-27.4.1.tgz</span></span></code></pre></div><ol><li>解压后 <strong>/root</strong> 目录下会多出一个 <strong>docker</strong> 目录，给 <strong>docker</strong> 目录的文件添加可执行权限</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo chmod +x docker/*</span></span></code></pre></div><ol><li>将 docker 目录下的 所有文件复制到 /usr/bin 目录</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cp docker/* /usr/bin</span></span></code></pre></div><ol><li>查看 docker 版本，验证以上操作是否成功</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker version</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Client:</span></span>
<span class="line"><span> Version:           27.4.1</span></span>
<span class="line"><span> API version:       1.47</span></span>
<span class="line"><span> Go version:        go1.22.10</span></span>
<span class="line"><span> Git commit:        b9d17ea</span></span>
<span class="line"><span> Built:             Tue Dec 17 15:44:45 2024</span></span>
<span class="line"><span> OS/Arch:           linux/amd64</span></span>
<span class="line"><span> Context:           default</span></span>
<span class="line"><span>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</span></span></code></pre></div><p>docker 没启动，所以最后会输出：<strong>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</strong></p><ol><li>创建docker服务 <ol><li>创建 <strong>/etc/systemd/system/docker.service</strong> 文件并写入以下内容</li></ol></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Docker Application Container Engine</span></span>
<span class="line"><span>Documentation=https://docs.docker.com</span></span>
<span class="line"><span>After=network-online.target firewalld.service</span></span>
<span class="line"><span>Wants=network-online.target</span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=notify</span></span>
<span class="line"><span>ExecStart=/usr/bin/dockerd --selinux-enabled=false --insecure-registry=127.0.0.1</span></span>
<span class="line"><span>ExecReload=/bin/kill -s HUP $MAINPID</span></span>
<span class="line"><span>LimitNOFILE=infinity</span></span>
<span class="line"><span>LimitNPROC=infinity</span></span>
<span class="line"><span>LimitCORE=infinity</span></span>
<span class="line"><span>TimeoutStartSec=0</span></span>
<span class="line"><span>Delegate=yes</span></span>
<span class="line"><span>KillMode=process</span></span>
<span class="line"><span>Restart=on-failure</span></span>
<span class="line"><span>StartLimitBurst=3</span></span>
<span class="line"><span>StartLimitInterval=60s</span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><ol><li>给 <strong>/etc/systemd/system/docker.service</strong> 文件设置权限</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chmod 777 /etc/systemd/system/docker.service</span></span></code></pre></div><ol><li>重启daemon-reload</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>systemctl daemon-reload</span></span></code></pre></div><ol><li>启动 docker</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo systemctl start docker</span></span></code></pre></div><ol><li>再次使用 <strong>docker version</strong> 查看 docker 是否启动成功</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@localhost ~]# docker version</span></span>
<span class="line"><span>Client:</span></span>
<span class="line"><span> Version:           27.4.1</span></span>
<span class="line"><span> API version:       1.47</span></span>
<span class="line"><span> Go version:        go1.22.10</span></span>
<span class="line"><span> Git commit:        b9d17ea</span></span>
<span class="line"><span> Built:             Tue Dec 17 15:44:45 2024</span></span>
<span class="line"><span> OS/Arch:           linux/amd64</span></span>
<span class="line"><span> Context:           default</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Server: Docker Engine - Community</span></span>
<span class="line"><span> Engine:</span></span>
<span class="line"><span>  Version:          27.4.1</span></span>
<span class="line"><span>  API version:      1.47 (minimum version 1.24)</span></span>
<span class="line"><span>  Go version:       go1.22.10</span></span>
<span class="line"><span>  Git commit:       c710b88</span></span>
<span class="line"><span>  Built:            Tue Dec 17 15:46:06 2024</span></span>
<span class="line"><span>  OS/Arch:          linux/amd64</span></span>
<span class="line"><span>  Experimental:     false</span></span>
<span class="line"><span> containerd:</span></span>
<span class="line"><span>  Version:          v1.7.24</span></span>
<span class="line"><span>  GitCommit:        88bf19b2105c8b17560993bee28a01ddc2f97182</span></span>
<span class="line"><span> runc:</span></span>
<span class="line"><span>  Version:          1.2.3</span></span>
<span class="line"><span>  GitCommit:        v1.2.3-0-g0d37cfd</span></span>
<span class="line"><span> docker-init:</span></span>
<span class="line"><span>  Version:          0.19.0</span></span>
<span class="line"><span>  GitCommit:        de40ad0</span></span></code></pre></div><p>和之前对比输出的信息变多了，“<strong>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</strong>”也消失了，代表 docker 启动成功</p><ol><li>设置开机自启动</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>systemctl enable docker</span></span></code></pre></div><h2 id="离线安装-docker-compose" tabindex="-1">离线安装 docker-compose <a class="header-anchor" href="#离线安装-docker-compose" aria-label="Permalink to &quot;离线安装 docker-compose&quot;">​</a></h2><ol><li>下载 docker-compose 可执行程序</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://github.com/docker/compose/releases</span></span></code></pre></div><p><img src="https://xnote.xclhove.top/api/image/name/1_ebcb2ef29106e9530b2ef2f564f53b75.png" alt="image.png"></p><p>这里以 <strong>docker-compose-linux-x86_64</strong> 为例</p><ol><li>将可执行程序上传到 /root 目录</li><li>打开命令行，进入 /root 目录</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd /root</span></span></code></pre></div><ol><li>重命名可执行文件为 docker-compose</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mv docker-compose-linux-x86_64 docker-compose</span></span></code></pre></div><ol><li>创建 /usr/local/docker-compose 目录</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir -p /usr/local/docker-compose</span></span></code></pre></div><ol><li>将可执行文件移动到 /usr/local/docker-compose 目录下</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mv docker-compose /usr/local/docker-compose</span></span></code></pre></div><ol><li>给 docker-compose 文件添加可执行权限</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo chmod +x /usr/local/docker-compose/docker-compose</span></span></code></pre></div><ol><li>创建软链接</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> sudo ln -s /usr/local/docker-compose/docker-compose /usr/local/bin/docker-compose</span></span></code></pre></div><ol><li>查看 docker-compose 版本验证操作是否成功</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker-compose --version</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@localhost ~]# docker-compose --version</span></span>
<span class="line"><span>Docker Compose version v2.32.1</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,53),u=["href"],g=["href"],m={key:1,style:{margin:"0 5px"}},k=["href"],f=JSON.parse('{"title":"Centos 7/8 离线安装 docker/docker-compose","description":"","frontmatter":{"prev":{"text":"笔记","link":"/笔记"}},"headers":[],"params":{"id":146,"title":"Centos 7/8 离线安装 docker/docker-compose","userId":1,"releaseTime":"2024-12-26T15:31:59.000+00:00","updateTime":"12/27/2024, 9:01:03 AM","isPublic":"公开","typeId":8,"sourceUrl":"https://xnote.xclhove.top/note/preview/146","prev":{"link":"./144#SSH 使用公钥登录","text":"上一篇：SSH 使用公钥登录"},"next":{"link":"./62#docker常用命令","text":"下一篇：docker常用命令"}},"relativePath":"note/146.md","filePath":"note/146.md"}'),v={name:"note/146.md"},x=i({...v,setup(b){const{params:l}=t();return c(()=>{document.title=l.value.title}),(s,y)=>(p(),a("div",null,[h,n("p",null,"最近更新："+e(s.$params.updateTime),1),n("p",null,[d("原文链接："),n("a",{target:"_blank",href:s.$params.sourceUrl},e(s.$params.title),9,u)]),n("span",null,[s.$params.prev?(p(),a("a",{key:0,class:"prev",href:s.$params.prev.link},e(s.$params.prev.text),9,g)):o("",!0),s.$params.prev&&s.$params.next?(p(),a("span",m,"|")):o("",!0),s.$params.next?(p(),a("a",{key:2,href:s.$params.next.link},e(s.$params.next.text),9,k)):o("",!0)])]))}});export{f as __pageData,x as default};
