import{d as p,u as h,k,c as i,l as a,t,a as r,e,a3 as o,o as n}from"./chunks/framework.7ep0oyv4.js";const d=o(`<h1 id="springboot-yml特殊字符" tabindex="-1">springboot yml特殊字符 <a class="header-anchor" href="#springboot-yml特殊字符" aria-label="Permalink to &quot;springboot yml特殊字符&quot;">​</a></h1><p>application.yml文件：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ymlString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c:\\windows\\test</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #没有&quot;&quot; \\t不会被转义</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ymlString2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c:\\windows</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">est&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #加上&quot;&quot; \\t会被转义</span></span></code></pre></div><p>java:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ymlString&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String javaString;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ymlString2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String javaString2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;javaString==&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> javaString);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//没有&quot;&quot; \\t不会被转义</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;javaString2==&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> javaString2);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//加上&quot;&quot; \\t会被转义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//javaString==&gt;c:\\windows\\test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//javaString2==&gt;c:\\windows  est</span></span></code></pre></div>`,5),g=["href"],E=["href"],y={key:1,style:{margin:"0 5px"}},u=["href"],D=JSON.parse('{"title":"springboot yml特殊字符","description":"","frontmatter":{"prev":{"text":"笔记","link":"/笔记"}},"headers":[],"params":{"id":33,"title":"springboot yml特殊字符","userId":1,"releaseTime":"2024-01-28T01:38:42.000+00:00","updateTime":"10/11/2024, 4:56:02 AM","isPublic":"公开","typeId":9,"sourceUrl":"https://xnote.xclhove.top/note/preview/33","prev":{"link":"./34#maven pom.xml配置阿里云仓库","text":"上一篇：maven pom.xml配置阿里云仓库"},"next":{"link":"./36#fasijson2的maven坐标","text":"下一篇：fasijson2的maven坐标"}},"relativePath":"note/33.md","filePath":"note/33.md"}'),m={name:"note/33.md"},A=p({...m,setup(c){const{params:l}=h();return k(()=>{document.title=l.value.title}),(s,v)=>(n(),i("div",null,[d,a("p",null,"最近更新："+t(s.$params.updateTime),1),a("p",null,[r("原文链接："),a("a",{target:"_blank",href:s.$params.sourceUrl},t(s.$params.title),9,g)]),a("span",null,[s.$params.prev?(n(),i("a",{key:0,class:"prev",href:s.$params.prev.link},t(s.$params.prev.text),9,E)):e("",!0),s.$params.prev&&s.$params.next?(n(),i("span",y,"|")):e("",!0),s.$params.next?(n(),i("a",{key:2,href:s.$params.next.link},t(s.$params.next.text),9,u)):e("",!0)])]))}});export{D as __pageData,A as default};
